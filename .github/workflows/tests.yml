name: Testing

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  setup-build:
    name: Ex1 (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: [3.8, 3.9, "3.10", "3.11"]
#        python-version: ["3.10", ] 

    steps:
    - uses: actions/checkout@v4

    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.1.1
      with:
        activate-environment: aurora-test
        python-version: ${{ matrix.python-version }}

    - name: Install Env
      run: |
        python --version
        conda install -c conda-forge pytest pytest-cov certifi">=2017.4.17" pandoc
        
        git clone https://github.com/MTgeophysics/mtpy-v2.git # @main
        cd mtpy-v2
        # conda env create -f environment.yml --name=aurora-test
        conda env update --file environment.yml 
        source activate aurora-test
        pip install git+https://github.com/simpeg/pydiso.git
        pip install -e . # executes mtpy-v2 setup.py
        pip uninstall aurora
        cd ../
        pip install -r requirements-dev.txt
        # these are installed by mtpy-v2 now
        # pip install git+https://github.com/kujaku11/mt_metadata.git@main
        # pip install git+https://github.com/kujaku11/mth5.git@master

    - name: Install Our Package
      run: |
        pip install -e .
        conda list
        pip freeze
        
    - name: Install Jupyter and dependencies
      run: |
        pip install jupyter
        pip install ipykernel
        python -m ipykernel install --user --name aurora-test
        # Install any other dependencies you need

    - name: Execute Jupyter Notebooks
      run: |
        jupyter nbconvert --to notebook --execute docs/examples/dataset_definition.ipynb
        jupyter nbconvert --to notebook --execute docs/examples/operate_aurora.ipynb
        jupyter nbconvert --to notebook --execute docs/tutorials/pole_zero_fitting/lemi_pole_zero_fitting_example.ipynb
        jupyter nbconvert --to notebook --execute docs/tutorials/processing_configuration.ipynb
        jupyter nbconvert --to notebook --execute docs/tutorials/process_cas04_single_station.ipynb
        jupyter nbconvert --to notebook --execute docs/tutorials/synthetic_data_processing.ipynb
        jupyter nbconvert --to notebook --execute tests/test_run_on_commit.ipynb
        # Replace "notebook.ipynb" with your notebook's filename

#    - name: Commit changes (if any)
#      run: |
#        git config --local user.email "action@github.com"
#        git config --local user.name "GitHub Action"
#        git commit -a -m "Execute Jupyter notebook"
#        git push
#      if: ${{ success() }}


    - name: Run Tests
      run: |
        # pytest -s -v tests/synthetic/test_fourier_coefficients.py
        # pytest -s -v tests/test_general_helper_functions.py 
        pytest -s -v --cov=./ --cov-report=xml --cov=aurora

    - name: "Upload coverage reports to Codecov"
      uses: codecov/codecov-action@v4
      with:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false
        flags: tests
        # token: ${{ secrets.CODECOV_TOKEN }}

    - name: Build Doc
      if: ${{ (github.ref == 'refs/heads/main') && (matrix.python-version == '3.8')}}
      run: |
        cd docs
        make html
        cd ..

    - name: GitHub Pages
      if: ${{ (github.ref == 'refs/heads/main') && (matrix.python-version == '3.8')}}
      uses: crazy-max/ghaction-github-pages@v2.5.0
      with:
        build_dir: docs/_build/html
        # Write the given domain name to the CNAME file
        # fqdn: aurora.simpeg.xyz
        # Allow Jekyll to build your site
        jekyll: false # optional, default is true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
